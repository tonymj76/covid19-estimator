#!/bin/bash

if [[ $# -eq 0 ]]; then
  echo "add options"
elif [[ "$1" == 'gen' ]]; then
  echo "running"
  $PROTOC -I . --go_out=plugins=micro:vessel/proto vessel/proto/vessel/vessel.proto | echo
  echo "end"
elif [[ "$1" == 'micro' ]]; then
  echo "running"
  $PROTOC -I ./ proto/consignment/consignment.proto --micro_out=gen --go_out=gen | echo
  echo "end"
elif [[ "$1" == 'grpc' ]]; then
  echo "running"
  $PROTOC -I ./ proto/consignment/consignment.proto --micro_out=gen --go_out=plugins=grpc:gen | echo
  echo "end"
elif [[ "$1" == 'dserver' ]]; then
  echo "Build docker image"
  docker build -t shippy-service-vessel .
  echo "Run docker image"
  docker run -p 50052:50051 -e MICRO_SERVER_ADDRESS=:50051 shippy-service-vessel
  echo "end"

#   elif [[ "$1" == 'dserver' ]]; then
#   echo "running docker server..."
#   docker run -p 50051:50051 \
#       -e MICRO_SERVER_ADDRESS=:50051 \
#       shippy-service-consignment
#   echo "end"
# elif [[ "$1" == 'dbuild' ]]; then
#   echo "running docker server..."
#   docker build -t shippy-service-consignment .
#   echo "end"

# elif [[ "$2" == 'gen' ]]; then
#   if [[ "$2" == 'reset' ]]; then
#     echo "Running droping table and running migration ..."
#     buffalo-pop pop reset -e development
#     echo "Finished running migration"
#   elif [[ "$2" == 'migrate' ]]; then
#     echo "running migration ..."
#     buffalo-pop pop migrate up -e development
#     echo "Finished running migration"
#   elif [[ "$2" == 're-mi' ]]; then
#     buffalo-pop pop reset -e development
#     buffalo task db:seed
#   elif [[ "$2" == 'seed' ]]; then
#     buffalo task db:seed
#   else
#     buffalo-pop pop drop -e development
#     buffalo-pop pop create -e development
#     buffalo-pop pop migrate up -e development
#     buffalo task db:seed
#   fi
fi